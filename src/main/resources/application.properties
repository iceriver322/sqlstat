app.name = sqlstat
app.workers = 6
app.baseDir = /tmp/docs/
app.queue.depth = 100
app.source.file.extentions = .java;.c;.sh;.pl;.sql;.ctl;.qry;.xml
app.projectStat.showDetails=true
app.rule.sql.common[0].regex = select\s+?\S+?\s+?(?:\S+?\s+?)*?from
app.rule.sql.common[0].suggeston = 需要修改0
app.rule.sql.common[1].regex = delete\\s+from
app.rule.sql.common[1].suggeston = 需要修改1
app.rule.sql.common[2].regex = insert\\s+into
app.rule.sql.common[2].suggeston = 需要修改2
app.rule.sql.common[3].regex = update\\s+\\S+\\s+set
app.rule.sql.common[3].suggeston = 需要修改3
app.rule.sql.common[4].regex = sqlldr\\s+
app.rule.sql.common[4].suggeston = 需要修改4
app.rule.sql.common[5].regex = sqluldr\\s+
app.rule.sql.common[5].suggeston = 需要修改5
app.rule.sql.common[6].regex = sqlplus\\s+
app.rule.sql.common[6].suggeston = 需要修改6
app.rule.sql.common[7].regex = create\\s+table
app.rule.sql.common[7].suggeston = 需要修改7
app.rule.sql.common[8].regex = alter\\s+table
app.rule.sql.common[8].suggeston = 需要修改8
app.rule.sql.common[9].regex = dbms_output
app.rule.sql.common[9].suggeston = 需要修改9
app.rule.sql.common[10].regex = dbms_metadata
app.rule.sql.common[10].suggeston = 需要修改10
app.rule.ctl[0].regex = LOAD\\s+DATA\\s*.*\\s*INFILE\\s+
app.rule.ctl[0].suggeston = 需要修改0
app.rule.sql.target[0].regex = sysdate
app.rule.sql.target[0].suggestion = no 'sysdate' in mysql: select sysdate() from dual
app.rule.sql.target[1].regex = SYSTIMESTAMP
app.rule.sql.target[1].suggestion = no 'SYSTIMESTAMP' in mysql: select CURRENT_TIMESTAMP from dual
app.rule.sql.target[2].regex = to_char\\s*\\(
app.rule.sql.target[2].suggestion = no 'to_char' in mysql: select date_format(sysdate(), '%Y%m%d') from dual
app.rule.sql.target[3].regex = to_date\\s*\\(
app.rule.sql.target[3].suggestion = no 'to_date' in mysql: select str_to_date('20200805', '%Y%m%d') tdate from dual
app.rule.sql.target[4].regex = decode\\s*\\(
app.rule.sql.target[4].suggestion = no 'decode' in mysql: select case 2 when 1 then 100 else 200 end from dual
app.rule.sql.target[5].regex = nvl\\s*\\(
app.rule.sql.target[5].suggestion = no 'nvl' in mysql: select ifnull(null,100) from dual
app.rule.sql.target[6].regex = nvl2\\s*\\(
app.rule.sql.target[6].suggestion = no 'nvl2' in mysql: select case null when null then 1 else 2 end from dual
app.rule.sql.target[7].regex = rownum
app.rule.sql.target[7].suggestion = no 'rownum' in mysql: select sysdate() from dual limit 3
app.rule.sql.target[8].regex = trunc\\s*\\(
app.rule.sql.target[8].suggestion = no 'trunc' in mysql: select date(sysdate()) from dual OR select truncate(1.23, 0) from dual
app.rule.sql.target[9].regex = CHR\\s*\\(
app.rule.sql.target[9].suggestion = no 'CHR' in mysql: select CHAR(65 USING ASCII) chr from dual;
app.rule.sql.target[10].regex = EXTRACT\\s*\\(
app.rule.sql.target[10].suggestion = no 'EXTRACT' in mysql: select YEAR(sysdate()) from dual;
app.rule.sql.target[11].regex = \\(\\+\\)
app.rule.sql.target[11].suggestion = no '(+)' in mysql:  select a.*, b.* from test a left join test b on a.id=b.id;
